{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","spans","imageRef","current","clientHeight","createRef","addEventListener","image","alt_description","urls","style","gridRowEnd","ref","alt","src","regular","ImageList","images","map","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","getElementById"],"mappings":"0NAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2D,OCwDJC,E,4MA1DbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,4CAOjC,WAAU,IAAD,OACP,OACE,qBAAKM,UAAU,aAAf,SACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACE,sBAAKA,UAAU,QAAf,UACE,iDACA,uBACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,sB,GAtBtCK,IAAMC,WCkCfC,G,wDAjCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,SAAW,WACT,IAIMC,EAJS,EAAKC,SAASC,QAAQC,aAId,GAEvB,EAAKT,SAAS,CAAEM,WAhBhB,EAAKnB,MAAQ,CAAEmB,MAAO,GAEtB,EAAKC,SAAWL,IAAMQ,YALL,E,qDAQnB,WACEf,KAAKY,SAASC,QAAQG,iBAAiB,OAAQhB,KAAKU,Y,oBAatD,WAAU,IAAD,EAC2BV,KAAKH,MAAMoB,MAArCC,EADD,EACCA,gBAAiBC,EADlB,EACkBA,KAEzB,OACE,qBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUrB,KAAKR,MAAMmB,QAA7C,SACE,qBAAKW,IAAKtB,KAAKY,SAAUW,IAAKL,EAAiBM,IAAKL,EAAKM,gB,GA5BzClB,IAAMC,YCUfkB,EARG,SAAC7B,GACjB,IAAM8B,EAAS9B,EAAM8B,OAAOC,KAAI,SAACX,GAC/B,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMY,OAG/B,OAAO,qBAAK9B,UAAU,aAAf,SAA6B4B,KCmBvBG,E,4MAtBbtC,MAAQ,CAAEmC,OAAQ,I,EAElBI,e,uCAAiB,WAAOtC,GAAP,eAAAuC,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CACNC,MAAO3C,KAHI,OACT4C,EADS,OAOf,EAAKhC,SAAS,CAAEsB,OAAQU,EAASC,KAAKC,UAPvB,2C,kGAUjB,WACE,OACE,sBAAKxC,UAAU,eAAeqB,MAAO,CAAEoB,UAAW,QAAlD,UACE,cAAC,EAAD,CAAW1C,SAAUE,KAAK+B,iBAC1B,cAAC,EAAD,CAAWJ,OAAQ3B,KAAKR,MAAMmC,gB,GAjBpBpB,IAAMC,WCDxBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3e9fb0d0.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.unsplash.com\",\r\n  headers: {\r\n    Authorization: \"Client-ID 6tpRnDWQN38c7JkWBWmaTAvK5XTcAewPfWJ_3YqAItE\",\r\n  },\r\n});\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  // resetSearch = () => {\r\n  //   this.setState({ term: \"\" });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment\">\r\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Image Search</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={(e) => this.setState({ term: e.target.value })}\r\n            />\r\n            {/* <button class=\"ui button\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n            <button class=\"ui button\" onClick={this.resetSearch}>\r\n              Reset\r\n            </button> */}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//for searching results as you type\r\n\r\n// class SearchBar extends React.Component {\r\n//   state = { term: \"\" };\r\n\r\n//   onFormSubmit = (term) => {\r\n//     this.setState({ term });\r\n//     this.props.onSubmit(term);\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           value={this.state.term}\r\n//           onChange={(event) => this.onFormSubmit(event.target.value)}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { spans: 0 };\r\n\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n\r\n    // const spans = Math.ceil(height / 10);\r\n\r\n    const spans = height + 10;\r\n\r\n    this.setState({ spans });\r\n  };\r\n\r\n  render() {\r\n    const { alt_description, urls } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} alt={alt_description} src={urls.regular} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import React from \"react\";\r\nimport \"./ImageList.css\";\r\nimport ImageCard from \"./ImageCard\";\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.images.map((image) => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n\r\n  return <div className=\"image-list\">{images}</div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport unsplash from \"../api/unsplash\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component {\r\n  state = { images: [] };\r\n\r\n  onSearchSubmit = async (term) => {\r\n    const response = await unsplash.get(\"/search/photos\", {\r\n      params: {\r\n        query: term,\r\n      },\r\n    });\r\n\r\n    this.setState({ images: response.data.results });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: \"10px\" }}>\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}